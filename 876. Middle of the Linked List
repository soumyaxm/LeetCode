Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.

CODE:

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* slow=head;ListNode* fast=head->next;
        while(fast!=NULL){
            slow=slow->next;
            fast=fast->next;
            if (fast!=NULL) fast=fast->next;
        }
         return slow;
    }
};
