Write an algorithm to determine if a number n is happy.

A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

Input: n = 19
Output: true
Explanation:
1^2 + 9^2 = 82
8^2 + 2^2 = 68
6^2 + 8^2 = 100
1^2 + 0^2 + 0^2 = 1

CODE:

class Solution {
private:
    int nextn(int n){
        int newn=0;
        while(n!=0){
            int num=n%10;
            newn+=num*num;
            n=n/10;
        }
        return newn;
    }
public:
    bool isHappy(int n) {
        if(n==1) {
            return true;
        }
        else if(n==4) {
            return false;
        }
        else {
            return isHappy(nextn(n));
        }
    }
};
